apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo2
  namespace: workspace
  annotations:
    iam.gke.io/gcp-service-account: serving-demo@rtae-lab.iam.gserviceaccount.com
---
apiVersion: ray.io/v1
kind: RayService
metadata:
  name: llm
  namespace : workspace
spec:
  serveConfigV2: |
    applications:
    - name: llm
      route_prefix: /
      import_path: demo.sample.vllm:model
      deployments:
      - name: VLLMDeployment
        num_replicas: 1
        ray_actor_options:
          num_cpus: 4
          # NOTE: num_gpus is set automatically based on TENSOR_PARALLELISM
      runtime_env:
        working_dir: "https://github.com/RTae/kuberay-demo/archive/master.zip"
        pip:
          - vllm==0.6.3
        env_vars:
          MODEL_ID: "google/gemma-2-9b-it"
          TENSOR_PARALLELISM: "1"
          PIPELINE_PARALLELISM: "1"
          DTYPE: "auto"
  rayClusterConfig:
    headGroupSpec:
      rayStartParams:
        dashboard-host: '0.0.0.0'
      template:
        metadata:
          labels:
            app: llm-gemma
        spec:
          serviceAccountName: demo2
          nodeSelector:
            iam.gke.io/gke-metadata-server-enabled: "true"
          containers:
          - name: ray-head
            image: rayproject/ray-ml:2.33.0.914af0-py311
            resources:
              limits:
                cpu: "2"
                memory: "4Gi"
              requests:
                cpu: "2"
                memory: "4Gi"
            ports:
            - containerPort: 6379
              name: gcs-server
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
            env:
            - name: HUGGING_FACE_HUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-secret
                  key: hf_api_token
          - name: proxy
            image: gcr.io/endpoints-release/endpoints-runtime:2.50.0
            args:
              - "--service=llm-serve-a9rh.endpoints.rtae-lab.cloud.goog"
              - "--backend=http://127.0.0.1:8000"
              - "--listener_port=8081"
              - "--rollout_strategy=managed"
              - "--healthz=/healthz"
            ports:
            - containerPort: 8081
          tolerations:
          - key: node
            operator: Equal
            value: ray_head
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node
                    operator: In
                    values:
                    - "ray-head"
    workerGroupSpecs:
    - replicas: 1
      minReplicas: 0
      maxReplicas: 2
      groupName: workers
      rayStartParams: {}
      template:
        spec:
          serviceAccountName: demo2
          nodeSelector:
            iam.gke.io/gke-metadata-server-enabled: "true"
          containers:
          - name: llm
            image: rayproject/ray-ml:2.33.0.914af0-py311-gpu
            env:
            - name: HUGGING_FACE_HUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-secret
                  key: hf_api_token
            resources:
              limits:
                cpu: "6"
                memory: "16Gi"
                nvidia.com/gpu: "1"
              requests:
                cpu: "6"
                memory: "16Gi"
                nvidia.com/gpu: "1"
          tolerations:
          - key: node
            operator: Equal
            value: ray_worker
          - key: type
            operator: Equal
            value: large
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node
                    operator: In
                    values:
                    - "ray-worker"
---
apiVersion: v1
kind: Service
metadata:
  name: llm-serve-esp-svc
  namespace: workspace
spec:
  ports:
  - port: 80
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app: llm-gemma
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: llm-serve-ingress
  namespace: workspace
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
      - llm-serve-a9rh.endpoints.rtae-lab.cloud.goog
      secretName: llm-serve-a9rh
  rules:
    - host: llm-serve-a9rh.endpoints.rtae-lab.cloud.goog
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: llm-serve-esp-svc
              port:
                number: 80